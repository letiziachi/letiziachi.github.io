---
import { type CollectionEntry, getCollection } from "astro:content";
import type { projectSchema } from "../../content/config";
import ProjectItemLayout from "../../layouts/ProjectItemLayout.astro";

export async function getStaticPaths() {
  const itemEntries = await getCollection("photography");

  const paths = itemEntries.flatMap((entry) =>
  {
    const projectIdStr = entry.data.projectId.toString();

    // Register 3 routes for each project:
    // 1. Full slug: "0115-my_project_title"
    //    this is SEO and user friendly but changes if the title changes and
    //    previously shared the link would break without the other options and
    //    the little trick in 404.astro
    // 2. Raw numeric ID: "115"
    // 3. Padded numeric ID: "0115"
    //    This two remains constant even if the title changes and provide quite
    //    short urls, user friendly and necessary for the 404.astro redirect
    //    trick to work.
    // All routes resolve to the same content.
    return [
      { params: { slug: entry.slug }, props: { entry } },
      { params: { slug: projectIdStr }, props: { entry } },
      { params: { slug: projectIdStr.padStart(4, "0") }, props: { entry } }
    ];
  });

  return paths;
}

interface Props {
  entry: CollectionEntry<"photography">;
}

const { entry } = Astro.props;
const item: projectSchema = entry.data;
const { Content } = await entry.render();
---

<ProjectItemLayout
  title={item.title}
  description={item.description}
  images={item.images}
  coverImage={item.coverImage}
  updatedDate={item.updatedDate}
  custom_link={item.custom_link}
  custom_link_label={item.custom_link_label}
  badge={item.badge}
  customCssClass={item.customCssClass}
  customImageFormat={item.customImageFormat}
  sideBarActiveItemID="photography"
>
  <Content />
</ProjectItemLayout>
